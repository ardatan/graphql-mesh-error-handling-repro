import { GraphQLScalarType } from 'graphql';
import { AnyTypeComposer, SchemaComposer } from 'graphql-compose';
import { JSONSchema } from 'json-machete';
import { Logger } from '@graphql-mesh/types';
export interface TypeComposers {
    input?: AnyTypeComposer<any>;
    output: AnyTypeComposer<any> | SchemaComposer;
    description?: string;
    nullable?: boolean;
    default?: any;
    readOnly?: boolean;
    writeOnly?: boolean;
    flatten?: boolean;
    deprecated?: boolean;
}
export interface GetComposerFromJSONSchemaOpts {
    subgraphName: string;
    schema: JSONSchema;
    logger: Logger;
    getScalarForFormat?: (format: string) => GraphQLScalarType | void;
}
export declare function getComposerFromJSONSchema({ subgraphName, schema, logger, getScalarForFormat, }: GetComposerFromJSONSchemaOpts): Promise<TypeComposers>;
