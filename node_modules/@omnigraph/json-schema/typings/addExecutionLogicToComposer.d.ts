import { GraphQLScalarType } from 'graphql';
import { SchemaComposer } from 'graphql-compose';
import { IStringifyOptions } from 'qs';
import { Logger } from '@graphql-mesh/types';
import { JSONSchemaOperationConfig, OperationHeadersConfiguration } from './types.js';
export interface AddExecutionLogicToComposerOptions {
    schemaComposer: SchemaComposer;
    endpoint: string;
    operations: JSONSchemaOperationConfig[];
    operationHeaders?: OperationHeadersConfiguration;
    logger: Logger;
    queryParams?: Record<string, string | number | boolean>;
    queryStringOptions?: IStringifyOptions;
    getScalarForFormat?: (format: string) => GraphQLScalarType | void;
    handlerName?: string;
}
export declare function addExecutionDirectivesToComposer(subgraphName: string, { schemaComposer, logger, operations, operationHeaders, endpoint, queryParams, queryStringOptions, handlerName, }: AddExecutionLogicToComposerOptions): import("graphql").GraphQLSchema;
